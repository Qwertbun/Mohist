--- a/net/minecraft/core/HolderSet.java
+++ b/net/minecraft/core/HolderSet.java
@@ -14,7 +_,7 @@
 import org.jetbrains.annotations.Nullable;
 import org.jetbrains.annotations.VisibleForTesting;
 
-public interface HolderSet<T> extends Iterable<Holder<T>> {
+public interface HolderSet<T> extends Iterable<Holder<T>>, net.minecraftforge.common.extensions.IForgeHolderSet<T> {
    Stream<Holder<T>> m_203614_();
 
    int m_203632_();
@@ -133,6 +_,9 @@
 
       public void m_205835_(List<Holder<T>> p_205836_) {
          this.f_205830_ = List.copyOf(p_205836_);
+         for (Runnable runnable : this.invalidationCallbacks) {
+            runnable.run(); // FORGE: invalidate listeners when tags rebind
+         }
       }
 
       public TagKey<T> m_205839_() {
@@ -152,6 +_,11 @@
       }
 
       public boolean m_203333_(Holder<T> p_205834_) {
+         // Mohist start - fix npe
+         if (p_205834_ == null) {
+            return false;
+         }
+         // Mohist end
          return p_205834_.m_203656_(this.f_205829_);
       }
 
@@ -161,6 +_,11 @@
 
       public boolean m_207277_(HolderOwner<T> p_256542_) {
          return this.f_254711_.m_254921_(p_256542_);
+      }
+      // FORGE: Keep a list of invalidation callbacks so they can be run when tags rebind
+      private List<Runnable> invalidationCallbacks = new java.util.ArrayList<>();
+      public void addInvalidationListener(Runnable runnable) {
+         invalidationCallbacks.add(runnable);
       }
    }
 }
